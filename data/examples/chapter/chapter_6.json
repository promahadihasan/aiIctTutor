{
  "topics": 
[
  {
    "id": 1,
    "name": "ডাটাবেজ",
    "definition": "ডাটাবেজ হলো সম্পর্কযুক্ত তথ্যের (Data) একটি **সুসংগঠিত এবং সুবিন্যস্ত ইলেকট্রনিক ভান্ডার** যা কম্পিউটার সিস্টেমে দক্ষতার সাথে সংরক্ষণ, পরিচালনা এবং পুনরুদ্ধার (Retrieval) করার জন্য তৈরি করা হয়। একটি ডেটাবেজে ডেটা সাধারণত এক বা একাধিক **টেবিল** আকারে সংরক্ষিত থাকে, যেখানে ডেটাবেজের যৌক্তিক কাঠামো সংজ্ঞায়িত থাকে। এটি ডেটাকে এমনভাবে সাজায় যাতে প্রয়োজন অনুযায়ী জটিল অনুসন্ধান, ডেটার সমন্বয় এবং দ্রুত রিপোর্ট তৈরি করা সম্ভব হয়, যা এটিকে আধুনিক ব্যবসা ও অ্যাপ্লিকেশনগুলোর **কেন্দ্রীয় তথ্য ব্যবস্থা** হিসাবে অপরিহার্য করে তোলে।"
  },
  {
    "id": 2,
    "name": "ডাটাবেজ ম্যানেজমেন্ট সিস্টেম (DBMS) কি? সুবিধা কি কি",
    "definition": "ডাটাবেজ ম্যানেজমেন্ট সিস্টেম (DBMS) হলো এক সেট **সফটওয়্যার প্রোগ্রাম** যা ব্যবহারকারী এবং অন্যান্য অ্যাপ্লিকেশন প্রোগ্রামকে ডেটাবেজে সংরক্ষিত ডেটা তৈরি, পরিচালনা, আপডেট এবং অ্যাক্সেস করার অনুমতি দেয়। **সুবিধাগুলো** হলো: এটি ডেটার **পুনরাবৃত্তি (Redundancy)** কমিয়ে মেমরি বাঁচায়, ডেটার **ধারাবাহিকতা (Consistency)** নিশ্চিত করে, মাল্টিপল ইউজার পরিবেশে ডেটা শেয়ারিং সহজ করে, ডেটার **নিরাপত্তা (Security)** (যেমন: অননুমোদিত অ্যাক্সেস নিয়ন্ত্রণ) বৃদ্ধি করে, এবং ডেটার স্বাধীনতা (Data Independence) বজায় রেখে ডেটা ও অ্যাপ্লিকেশন প্রোগ্রামকে পৃথক রাখে। জনপ্রিয় উদাহরণ হলো MySQL, Oracle, এবং SQL Server।"
  },
  {
    "id": 3,
    "name": "ডাটাবেজ টেবিল",
    "definition": "ডাটাবেজ টেবিল হলো ডাটাবেজের **মৌলিক কাঠামো বা বিল্ডিং ব্লক**, যেখানে ডেটা **সারি (Rows)** এবং **কলাম (Columns)** আকারে সংরক্ষণ করা হয়। একটি টেবিল একটি নির্দিষ্ট ধরনের তথ্য বা **সত্তা (Entity)** কে প্রতিনিধিত্ব করে (যেমন: 'শিক্ষক', 'ছাত্র', বা 'পণ্য')। প্রতিটি সারি একটি একক **রেকর্ড** (সত্তার একটি দৃষ্টান্ত) ধারণ করে এবং প্রতিটি কলাম একটি একক **ফিল্ড** বা অ্যাট্রিবিউটকে (সত্তার একটি বৈশিষ্ট্য) প্রতিনিধিত্ব করে। টেবিলের মাধ্যমে রিলেশনাল ডেটাবেজে ডেটার যৌক্তিক সংগঠন সম্ভব হয়।"
  },
  {
    "id": 4,
    "name": "ফিল্ড",
    "definition": "ফিল্ড হলো ডাটাবেজ টেবিলের একটি **উল্লম্ব কলাম** যা একটি নির্দিষ্ট ধরনের তথ্য বা **অ্যাট্রিবিউট** সংরক্ষণ করে। এটি একটি রেকর্ডের ক্ষুদ্রতম নামযুক্ত অংশ যা ডেটার একটি একক বৈশিষ্ট্যকে সংজ্ঞায়িত করে। উদাহরণস্বরূপ, একটি কর্মচারী টেবিলে 'Employee_ID', 'Name', এবং 'Salary' প্রত্যেকেই এক একটি ফিল্ড। প্রতিটি ফিল্ডের জন্য একটি নির্দিষ্ট **ডেটা টাইপ** (যেমন: INTEGER, TEXT) এবং ডেটা বৈধতার নিয়ম (Constraints) নির্ধারিত থাকে।"
  },
  {
    "id": 5,
    "name": "রেকর্ড",
    "definition": "রেকর্ড হলো ডাটাবেজ টেবিলের একটি **অনুভূমিক সারি (Row)** যা একটি একক সত্তা (Entity) বা আইটেম সম্পর্কে **সম্পূর্ণ তথ্য** ধারণ করে। একটি রেকর্ডে টেবিলের সমস্ত ফিল্ডের জন্য মান বা ডেটা থাকে। উদাহরণস্বরূপ, একটি 'পণ্য' টেবিলে একটি নির্দিষ্ট পণ্যের সম্পূর্ণ বিবরণ (পণ্যের নাম, মূল্য, স্টক সংখ্যা) নিয়ে গঠিত সারিটিই হলো একটি রেকর্ড। ডেটাবেজে ডেটা ইনপুট এবং আউটপুটের মৌলিক ইউনিট হলো রেকর্ড।"
  },
  {
    "id": 6,
    "name": "ডাটাবেজ key",
    "definition": "ডাটাবেজ কী (Key) হলো একটি বা একাধিক ফিল্ডের সমষ্টি, যা ব্যবহার করে ডাটাবেজ টেবিলের প্রতিটি রেকর্ডকে **অনন্যভাবে (Uniquely) সনাক্ত** করা যায় এবং এক বা একাধিক টেবিলের মধ্যে **সম্পর্ক (Relationship)** স্থাপন করা যায়। কীগুলো ডেটাবেজের ডেটা ইন্টিগ্রিটি (Integrity) এবং ধারাবাহিকতা বজায় রাখার জন্য অত্যন্ত গুরুত্বপূর্ণ এবং বিভিন্ন প্রকারের কী ব্যবহৃত হয়, যেমন: সুপার কী, ক্যান্ডিডেট কী, প্রাইমারি কী এবং ফরেন কী।"
  },
  {
    "id": 7,
    "name": "প্রাইমারি কী",
    "definition": "প্রাইমারি কী (Primary Key) হলো একটি ডাটাবেজ টেবিলের সেই ফিল্ড বা ফিল্ডের সেট যা টেবিলের প্রতিটি রেকর্ডকে **অনন্যভাবে সনাক্ত করার জন্য মুখ্যভাবে নির্বাচিত** হয়। এটি একটি **ক্যান্ডিডেট কী (Candidate Key)** থেকে মনোনীত হয় এবং একটি টেবিলের শুধুমাত্র একটি প্রাইমারি কী থাকতে পারে। প্রাইমারি কী-এর মান **কখনোই ফাঁকা (Null) বা ডুপ্লিকেট** হতে পারে না। এই সীমাবদ্ধতাগুলি ডেটাবেজের সত্তা অখণ্ডতা (Entity Integrity) নিশ্চিত করে।"
  },
  {
    "id": 8,
    "name": "ফরেন কী",
    "definition": "ফরেন কী (Foreign Key) হলো একটি ডাটাবেজ টেবিলের সেই ফিল্ড বা ফিল্ডের সেট যা অন্য একটি **প্যারেন্ট টেবিলের প্রাইমারি কী**-কে রেফারেন্স করে। ফরেন কী এর মূল উদ্দেশ্য হলো দুটি টেবিলের মধ্যে **যৌক্তিক সম্পর্ক (Relationship)** স্থাপন করা এবং **রেফারেনশিয়াল ইন্টিগ্রিটি (Referential Integrity)** বজায় রাখা। এটি নিশ্চিত করে যে চাইল্ড টেবিলের রেফারেন্স করা মান প্যারেন্ট টেবিলের প্রাইমারি কী-এর বিদ্যমান মানের সাথে মেলে, তবে ফরেন কী এর মান ডুপ্লিকেট হতে পারে এবং ক্ষেত্রবিশেষে Null হতে পারে।"
  },
  {
    "id": 9,
    "name": "কম্পজিট কী",
    "definition": "কম্পজিট কী (Composite Key) হলো **দুটি বা ততোধিক ফিল্ডের সমন্বয়ে গঠিত একটি ক্যান্ডিডেট কী**, যা সম্মিলিতভাবে একটি টেবিলের প্রতিটি রেকর্ডকে **অনন্যভাবে সনাক্ত** করার জন্য ব্যবহৃত হয়। যখন একটি একক ফিল্ড দ্বারা টেবিলের প্রতিটি রেকর্ডকে আলাদাভাবে চিহ্নিত করা সম্ভব হয় না, তখন একাধিক ফিল্ডের মান একসাথে ব্যবহার করে এটিকে প্রাইমারি কী হিসেবে সেট করা হয়। উদাহরণস্বরূপ, একটি লাইব্রেরি বুকিং টেবিলে ('Member_ID' + 'Book_ID') একসাথে কম্পজিট কী হতে পারে।"
  },
  {
    "id": 10,
    "name": "প্রাইমারি কি ও ফরেন কি এর পার্থক্য",
    "definition": "প্রাইমারি কী এবং ফরেন কী উভয়েই ডেটাবেজ ইন্টিগ্রিটির জন্য ব্যবহৃত হলেও, এদের ভূমিকা ভিন্ন। **প্রাইমারি কী** হলো টেবিলের রেকর্ডকে **অনন্যভাবে সনাক্ত করার মাধ্যম**, যার মান কখনই **Null** হতে পারে না এবং এটি ডেটাবেজের **সত্তা অখণ্ডতা (Entity Integrity)** নিশ্চিত করে। অন্যদিকে, **ফরেন কী** হলো অন্য একটি টেবিলের প্রাইমারি কী-কে রেফারেন্স করে **দুটি টেবিলের মধ্যে সম্পর্ক স্থাপন করার মাধ্যম**, এবং এর মান ডুপ্লিকেট হতে পারে ও ক্ষেত্রবিশেষে Null হতে পারে। এটি **রেফারেনশিয়াল ইন্টিগ্রিটি (Referential Integrity)** বজায় রাখে।"
  },
  {
    "id": 11,
    "name": "ডাটাবেজ রিলেশন কি ? প্রকারভেদ",
    "definition": "ডাটাবেজ রিলেশন হলো একটি রিলেশনাল ডাটাবেজে **একাধিক টেবিলের মধ্যে ডেটার যৌক্তিক সংযোগ বা সম্পর্ক**। এটি ফরেন কী (Foreign Key) ব্যবহার করে টেবিলগুলোকে সংযুক্ত করে যাতে তথ্যের জটিল সমন্বয় করা যায়। **প্রকারভেদ** প্রধানত তিন ধরনের: ১. **One-to-One (১:১):** একটি টেবিলের একটি রেকর্ড অন্য টেবিলের শুধুমাত্র একটি রেকর্ডের সাথে সম্পর্কিত (যেমন: একজন ব্যক্তির একটিই পাসপোর্ট)। ২. **One-to-Many (১:N):** একটি টেবিলের একটি রেকর্ড অন্য টেবিলের একাধিক রেকর্ডের সাথে সম্পর্কিত (যেমন: একজন শিক্ষক একাধিক ছাত্রকে পড়ান)। ৩. **Many-to-Many (M:N):** একটি টেবিলের একাধিক রেকর্ড অন্য টেবিলের একাধিক রেকর্ডের সাথে সম্পর্কিত (যা সাধারণত একটি তৃতীয় 'সংযোগকারী' টেবিল দ্বারা বাস্তবায়ন করা হয়)।"
  },
  {
    "id": 12,
    "name": "SQL",
    "definition": "SQL (Structured Query Language) হলো **রিলেশনাল ডাটাবেজ ম্যানেজমেন্ট সিস্টেম (RDBMS)**-এর সাথে যোগাযোগ, ডেটা ম্যানেজমেন্ট এবং ডেটা ম্যানিপুলেশনের জন্য ডিজাইন করা একটি **স্ট্যান্ডার্ড ভাষা**। এটি ডেটাবেজ তৈরি, রক্ষণাবেক্ষণ, এবং ডেটা অনুসন্ধান, সন্নিবেশ (Insertion), হালনাগাদ (Update) ও মুছে ফেলার (Deletion) জন্য ব্যবহৃত হয়। SQL মূলত দুটি প্রধান অংশে বিভক্ত: **DDL (Data Definition Language)** যা কাঠামো সংজ্ঞায়িত করে এবং **DML (Data Manipulation Language)** যা ডেটা পরিচালনা করে।"
  },
  {
    "id": 13,
    "name": "DDL commands",
    "definition": "DDL (Data Definition Language) হলো SQL-এর সেই অংশ যা ডাটাবেজ **অবজেক্টের কাঠামো বা স্কিমা (Schema) সংজ্ঞায়িত ও পরিবর্তন** করতে ব্যবহৃত হয়। এই কমান্ডগুলি ডেটার পরিবর্তে **অবজেক্টের সংজ্ঞামূলক দিক** নিয়ে কাজ করে। প্রধান DDL কমান্ডগুলো হলো: **CREATE** (ডাটাবেজ, টেবিল বা ইনডেক্স তৈরি), **ALTER** (বিদ্যমান অবজেক্টের কাঠামো পরিবর্তন, যেমন: একটি কলাম যোগ করা), **DROP** (টেবিল বা ডাটাবেজ সম্পূর্ণরূপে মুছে ফেলা), এবং **TRUNCATE** (টেবিলের সব ডেটা দ্রুত মুছে ফেলা কিন্তু তার কাঠামো রেখে দেওয়া)।"
  },
  {
    "id": 14,
    "name": "DML commands",
    "definition": "DML (Data Manipulation Language) হলো SQL-এর সেই অংশ যা ডাটাবেজ টেবিলের মধ্যে থাকা **ডেটা পরিচালনা বা পরিবর্তন** করতে ব্যবহৃত হয়। এই কমান্ডগুলো ব্যবহার করে ডেটাবেজে নতুন ডেটা প্রবেশ করানো, বিদ্যমান ডেটা পরিবর্তন করা এবং ডেটা মুছে ফেলা যায়। প্রধান DML কমান্ডগুলো হলো: **INSERT** (টেবিলে নতুন ডেটা যোগ করা), **UPDATE** (নির্দিষ্ট শর্তের ভিত্তিতে ডেটা হালনাগাদ করা), এবং **DELETE** (টেবিল থেকে রেকর্ড মুছে ফেলা)। এছাড়াও, **SELECT** কমান্ডটি ডেটা পুনরুদ্ধারের জন্য ব্যবহৃত হয়, যা প্রায়শই DML-এর অংশ হিসেবে গণ্য হয়।"
  },
  {
    "id": 15,
    "name": "ডাটাবেজ এর ডাটা টাইপ",
    "definition": "ডাটাবেজ এর ডাটা টাইপ হলো সেই বৈশিষ্ট্য যা কোনো ফিল্ডে **কোন ধরনের তথ্য** সংরক্ষণ করা যাবে (যেমন: সংখ্যা, অক্ষর, তারিখ) এবং মেমরিতে সেই ডেটার জন্য **কতটুকু জায়গা** প্রয়োজন হবে তা সংজ্ঞায়িত করে। এটি ডেটাবেজের **ডেটার বৈধতা (Data Validity)** এবং স্টোরেজ দক্ষতা নিশ্চিত করে। সাধারণ ডেটা টাইপগুলো হলো: **INTEGER** (পূর্ণসংখ্যা), **FLOAT/DOUBLE** (দশমিক সংখ্যা), **VARCHAR/TEXT** (পরিবর্তনশীল দৈর্ঘ্যের অক্ষর বা স্ট্রিং), **DATE/TIME** (তারিখ ও সময়), এবং **BOOLEAN** (সত্য/মিথ্যা)।"
  },
  {
    "id": 16,
    "name": "ডাটাবেজ এ ইন্ডেক্সিং ও সর্টিং এর পার্থক্য",
    "definition": "**ইন্ডেক্সিং** হলো একটি স্থায়ী কৌশল যেখানে ডেটাবেজ টেবিলের কলামগুলোর জন্য এক ধরনের **লুকআপ টেবিল (Lookup Table)** তৈরি করা হয়। এটি ডেটার ফিজিক্যাল অর্ডার পরিবর্তন না করেই **অনুসন্ধান (Searching) এবং ডেটা পুনরুদ্ধারের (Retrieval) গতি দ্রুত** করে, অনেকটা বইয়ের সূচিপত্রের মতো। অন্যদিকে, **সর্টিং** হলো ডেটাবেজের ডেটাকে একটি নির্দিষ্ট ফিল্ডের মানের ভিত্তিতে **ক্রম অনুসারে (যেমন: Ascending বা Descending) সাময়িকভাবে বা স্থায়ীভাবে সাজানোর প্রক্রিয়া**। ইন্ডেক্সিং ডেটা অ্যাক্সেসের কৌশলকে উন্নত করে, আর সর্টিং ডেটার প্রদর্শনের বিন্যাসকে পরিবর্তন করে।"
  },
  {
    "id": 17,
    "name": "ডাটা এনক্রিপশন",
    "definition": "ডাটা এনক্রিপশন হলো এমন একটি প্রক্রিয়া যেখানে ডেটা বা তথ্যকে একটি **গোপন সংকেতে (Ciphertext)** রূপান্তরিত করা হয়, যাতে কেবল একটি **ডিক্রিপশন কী (Decryption Key)** ব্যবহার করে অনুমোদিত ব্যবহারকারীরাই এটিকে তার মূল পাঠযোগ্য রূপে (**Plaintext**) পুনরুদ্ধার করতে পারে। এই প্রক্রিয়াটি ডেটাকে অননুমোদিত অ্যাক্সেস থেকে রক্ষা করে, বিশেষ করে ইন্টারনেট বা পাবলিক নেটওয়ার্কের মাধ্যমে ডেটা স্থানান্তরের সময়। এনক্রিপশনের জন্য একটি **অ্যালগরিদম** এবং একটি **কী** ব্যবহার করা হয়, যা তথ্যের **গোপনীয়তা (Confidentiality)** নিশ্চিত করে।"
  },
  {
    "id": 18,
    "name": "ক্রিপ্টোগ্রাফি",
    "definition": "ক্রিপ্টোগ্রাফি হলো তথ্য সুরক্ষিত করার একটি কৌশল, যা **গণিত এবং কম্পিউটার বিজ্ঞানের নীতি** ব্যবহার করে ডেটাকে এনক্রিপ্ট ও ডিক্রিপ্ট করার বিজ্ঞান। এর প্রধান লক্ষ্য হলো তথ্যের **গোপনীয়তা (Confidentiality)**, **অখণ্ডতা (Integrity)** (ডেটা পরিবর্তন হয়েছে কিনা তা নিশ্চিত করা), এবং **প্রমাণীকরণ (Authentication)** নিশ্চিত করা। ডেটা এনক্রিপশন হলো ক্রিপ্টোগ্রাফির একটি প্রধান **টুল বা অ্যাপ্লিকেশন**, যা আধুনিক সাইবার নিরাপত্তা, ডিজিটাল স্বাক্ষর এবং সুরক্ষিত যোগাযোগের মেরুদণ্ড হিসেবে কাজ করে।"
  }
]

}
